{"ast":null,"code":"var _jsxFileName = \"/Users/akhilanori/Documents/Expense_Tracker_React/src/components/ExpenseItem.js\",\n  _s = $RefreshSig$();\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport { useState } from 'react'; //this allows us to define values as states\n//useState is a react hook\n\n//Method-1of1 of passing props \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseItem(props) {\n  _s();\n  //Method-2of2 of passing props --> using object destructuring \n  // function ExpenseItem({date1, title1, date1}){\n  //in such case you can use --> <h2>{title1}</h2> ... and so on \n\n  // that one parameter (props --> is the parameter here/object) which we are \n  //receiving here will be --\n  //--> will be an Object\n  // ---> which holds all received parameters as properties, hence the name\n  // --> props \n  //we get key-value pairs in this props object, which is passed by react\n  //The keys will be attribute name : title, amount, date\n  //The values will be : the values set in the expenses array\n\n  //   const expenseDate = new Date(2023, 10,7);\n  //   const expenseTitle = 'Car Insurance';\n  //   const expenseAmount = 500.24;\n\n  // const month = props.date1.toLocaleString('en-US',{month:'long'});\n  // const day = props.date1.toLocaleString('en-US',{day: '2-digit'})\n  // const year = props.date1.getFullYear();\n\n  const [titleInitialValue, setTitle] = useState(props.title1);\n  //we are passing props.title1 to useState\n  //First value in the array here, is the initial value and \n  //the second value in the array is the updating function\n  //here we havs used array destructuring ---> \n  //the 1st element in the array --> titleInitialValue ---> points at the value stored in props.title1\n  // the 2nd element in the array is : setTitle --> is a function\n\n  // let title1 = props.title1;\n\n  const clickHandlerAkhila = () => {\n    //console.log('Clicked!!')\n    // This arrow function will get executed when onClick button is clicked\n    //This function is triggered when evwnt is executed \n\n    // title1 = \"Updated Akhila!\"; //changing the title value onClick\n    //i) The button onClick is clicked\n    //ii) Then this function is executed\n    // iii) Then in <h2> tag .... inside return props.title2 will be executed\n    // title2 will be executed and the value will become Updated Akhila upon button click\n\n    setTitle('Passing a value here'); //we are calling the state updating function\n    console.log(setTitle);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date2: props.date1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandlerAkhila\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(ExpenseItem, \"IMp4Sdj9N2FFdpMPhDTpeyQF4+o=\");\n_c = ExpenseItem;\nexport default ExpenseItem;\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseDate","useState","jsxDEV","_jsxDEV","ExpenseItem","props","_s","titleInitialValue","setTitle","title1","clickHandlerAkhila","console","log","className","children","date2","date1","fileName","_jsxFileName","lineNumber","columnNumber","amount1","onClick","_c","$RefreshReg$"],"sources":["/Users/akhilanori/Documents/Expense_Tracker_React/src/components/ExpenseItem.js"],"sourcesContent":["import './ExpenseItem.css'\nimport ExpenseDate from './ExpenseDate'\nimport {useState} from 'react'; //this allows us to define values as states\n//useState is a react hook\n\n//Method-1of1 of passing props \nfunction ExpenseItem(props){\n\n    //Method-2of2 of passing props --> using object destructuring \n    // function ExpenseItem({date1, title1, date1}){\n    //in such case you can use --> <h2>{title1}</h2> ... and so on \n\n\n    // that one parameter (props --> is the parameter here/object) which we are \n    //receiving here will be --\n    //--> will be an Object\n    // ---> which holds all received parameters as properties, hence the name\n    // --> props \n    //we get key-value pairs in this props object, which is passed by react\n    //The keys will be attribute name : title, amount, date\n    //The values will be : the values set in the expenses array\n\n\n//   const expenseDate = new Date(2023, 10,7);\n//   const expenseTitle = 'Car Insurance';\n//   const expenseAmount = 500.24;\n\n// const month = props.date1.toLocaleString('en-US',{month:'long'});\n// const day = props.date1.toLocaleString('en-US',{day: '2-digit'})\n// const year = props.date1.getFullYear();\n\nconst [titleInitialValue, setTitle] = useState(props.title1);\n//we are passing props.title1 to useState\n//First value in the array here, is the initial value and \n//the second value in the array is the updating function\n//here we havs used array destructuring ---> \n//the 1st element in the array --> titleInitialValue ---> points at the value stored in props.title1\n// the 2nd element in the array is : setTitle --> is a function\n\n\n// let title1 = props.title1;\n\n   const clickHandlerAkhila = () => {\n    //console.log('Clicked!!')\n    // This arrow function will get executed when onClick button is clicked\n    //This function is triggered when evwnt is executed \n\n    // title1 = \"Updated Akhila!\"; //changing the title value onClick\n    //i) The button onClick is clicked\n    //ii) Then this function is executed\n    // iii) Then in <h2> tag .... inside return props.title2 will be executed\n    // title2 will be executed and the value will become Updated Akhila upon button click\n    \n   setTitle('Passing a value here'); //we are calling the state updating function\n   console.log(setTitle);\n\n   }\n\n    return (\n        <div className=\"expense-item\">\n\n            <ExpenseDate date2={props.date1} />\n\n            {/* <div>{expenseDate.toISOString()}</div> */}\n\n            {/* Methtod-1 */}\n            {/* <div>{props.date1.toISOString()}</div> */}\n\n            {/* <div>\n                <div>{month}</div>\n                <div>{year}</div>\n                <div>{day}</div>\n\n            </div> */}\n\n            {/* Method-2 */}\n            {/* <div>{props.expense1.date}</div> */}\n\n\n            {/* props (date1, title1, amoutn1) are passed from App.js --> data is passed from App.js where\n            we are rendering our <ExpenseItem /> component in App.js  */}\n\n            {/* NOTE : The data is being imported from a different component\n            i.e., the data is being imported from App.js component\n            we are passing the data defined in that component to this component\n            via props  */}\n\n            <div className=\"expense-item__description\">\n                {/* <h2>{Math.random()}</h2> */}\n                {/* <h2>{expenseTitle}</h2> */}\n\n                {/* <h2>{props.title1}</h2> */}\n\n                <h2>{props.title1}</h2>\n\n                {/* <div className=\"expense-item__price\">${expenseAmount}</div> */}\n                <div className=\"expense-item__price\">${props.amount1}</div>\n             </div>\n\n             {/* <button onClick={()=> {console.log('clicked!')} }>Change Title</button> */}\n            {/* //  onClick --> is an Event listener, when you click on the button,\n            //  there is an arrow function which you specify */}\n\n            <button onClick={clickHandlerAkhila}></button>\n        </div>\n    )\n}\n\nexport default ExpenseItem;"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAOA,WAAW,MAAM,eAAe;AACvC,SAAQC,QAAQ,QAAO,OAAO,CAAC,CAAC;AAChC;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,WAAWA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAEvB;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGJ;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAM,CAACC,iBAAiB,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACI,KAAK,CAACI,MAAM,CAAC;EAC5D;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEG,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAChC;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEDF,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;IAClCG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAErB,CAAC;EAEA,oBACIL,OAAA;IAAKU,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAEzBX,OAAA,CAACH,WAAW;MAACe,KAAK,EAAEV,KAAK,CAACW;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eA0BnCjB,OAAA;MAAKU,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBAMtCX,OAAA;QAAAW,QAAA,EAAKT,KAAK,CAACI;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAGvBjB,OAAA;QAAKU,SAAS,EAAC,qBAAqB;QAAAC,QAAA,GAAC,GAAC,EAACT,KAAK,CAACgB,OAAO;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eAMPjB,OAAA;MAAQmB,OAAO,EAAEZ;IAAmB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd;AAACd,EAAA,CApGQF,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAsGpB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}