{"ast":null,"code":"var _jsxFileName = \"/Users/akhilanori/Documents/Expense_Tracker_React/src/components/NewExpenses/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport './ExpenseForm.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  const [initialEnteredTitle, functionForUpdatingTheState] = useState(''); //initially its an empty string, \n  //bcz initially when the component was rendered, nothing was rendered\n  //set the state for titleStateHandler\n\n  const [initialEnteredAmount, setAmountFunction] = useState('');\n\n  //this function will be called when the event onChange is executed\n  const titleChangeHandler = event => {\n    //Even though we don't explicitly specify event object here -> in React,\n    //this is the default behaviour of JavaScript in browsers\n    //For us React/browser makes sure that we get event object when ---\n    //the event change occurs\n    functionForUpdatingTheState(event.target.value); //I get the current value which I enter\n    //with every key stroke \n    //passing the current entered value as parameter/argument to functionForUpdatingTheState\n    //function \n    //This will be stored in our state \n  };\n\n  const amountChangeHandler = () => {\n    //this function should get triggered when the amount changes \n    setAmountFunction(event.target.value);\n  };\n  const dateChangehandler = () => {};\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2023-01-01\",\n          max: \"2040-12-31\",\n          onChange: dateChangehandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n};\n_s(ExpenseForm, \"GQLZ2AzMh8M4znYz5tanoh99stI=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ExpenseForm","_s","initialEnteredTitle","functionForUpdatingTheState","initialEnteredAmount","setAmountFunction","titleChangeHandler","event","target","value","amountChangeHandler","dateChangehandler","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["/Users/akhilanori/Documents/Expense_Tracker_React/src/components/NewExpenses/ExpenseForm.js"],"sourcesContent":["import './ExpenseForm.css'\nimport {useState} from 'react';\n\n\nconst ExpenseForm = () => {\n\n    const [initialEnteredTitle, functionForUpdatingTheState] = useState(''); //initially its an empty string, \n    //bcz initially when the component was rendered, nothing was rendered\n    //set the state for titleStateHandler\n\n    const [initialEnteredAmount, setAmountFunction]= useState('')\n\n\n    //this function will be called when the event onChange is executed\n    const titleChangeHandler = (event) => {\n        //Even though we don't explicitly specify event object here -> in React,\n        //this is the default behaviour of JavaScript in browsers\n        //For us React/browser makes sure that we get event object when ---\n        //the event change occurs\n        functionForUpdatingTheState(event.target.value) //I get the current value which I enter\n                //with every key stroke \n       //passing the current entered value as parameter/argument to functionForUpdatingTheState\n       //function \n       //This will be stored in our state \n    }\n\n    const amountChangeHandler = () => {\n        //this function should get triggered when the amount changes \n        setAmountFunction(event.target.value);\n    }\n\n    const dateChangehandler = () => {\n\n    }\n\n    return(     \n            <form>\n                <div className=\"new-expense__controls\">\n\n                    <div className=\"new-expense__control\">\n                       <label>Title</label>\n                       <input type=\"text\" onChange={titleChangeHandler} />\n                       {/* function that will be executed when onChange event listener \n                       is executed */}\n                     </div>  \n\n                     <div className=\"new-expense-control\">\n                        <label>Amount</label>\n                        <input type='number' min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\n                     </div>\n\n                     <div className=\"new-expense-control\">\n                        <label>Date</label>\n                        <input type='date' min=\"2023-01-01\" max=\"2040-12-31\" onChange={dateChangehandler} />\n                     </div>\n\n                 </div>\n\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\">Add Expense</button>\n            </div>\n\n            </form>\n    )\n\n}\nexport default ExpenseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}